## Events

Events represent real-world or virtual meetings that members can RSVP to. RSVP records are called "attendees".

### List

> GET response body

```json
{
  "events": [
    {
      "slug": "deliver-the-petition-to-the-wizard",
      "title": "Deliver the Petition to the Wizard",
      "url": "https://demo.controlshiftlabs.com/events/deliver-the-petition-to-the-wizard",
      "description": "Join us as we travel to the Emerald City to deliver our petition to the Wizard.",
      "start_at": "2018-03-01T12:00:00Z",
      "end_at": "2018-03-01T13:30:00Z",
      "start_in_zone": "2018-03-01T12:00:00-05:00",
      "end_in_zone": "2018-03-01T13:30:00-05:00",
      "time_zone": "America/New_York",
      "virtual": false,
      "launched_at": "2018-02-03T12:34:56Z",
      "locale": "en-US",
      "host_address": null,
      "max_attendees_count": null,
      "external_id": "control-shift-deliver-the-petition-to-the-wizard",
      "location": {
        "query": "wizard room",
        "latitude": "42.3376368",
        "longitude": "-70.99304",
        "venue": "The Wizard's Throne Room",
        "street_number": "",
        "street": "",
        "region": "MA",
        "postal_code": "",
        "country": "US",
        "created_at": "2017-11-16T22:38:29Z"
      },
      "shifts": [
        {
          "id": "103",
          "name": "Lunch",
          "start_at": "2018-03-01T12:00:00Z",
          "end_at": "2018-03-01T13:00:00Z"
        },
        {
          "id": "105",
          "name": "Demonstration",
          "start_at": "2018-03-01T13:00:00Z",
          "end_at": "2018-03-01T13:30:00Z"
        }
      ],
      "petition": {
        "slug": "repair-the-yellow-brick-road-1",
        "url": "https://demo.controlshiftlabs.com/petitions/repair-the-yellow-brick-road-1"
      },
      "labels": ["oz-organizer-help"]
    },
    ...
  ],
  "meta": {
    "current_page": 1,
    "total_pages": 1,
    "previous_page": null,
    "next_page": null
  }
}
```

Returns a paginated list of all events, including ones that are unlaunched or otherwise not visible to the public. Includes all the same data as the single-event endpoint for each event.

<%= partial "includes/shared/pagination.md" %>


`GET /api/v1/events?page=1`

<div></div>

### Show

> GET response Body

```json
{
  "event": {
    "slug": "deliver-the-petition-to-the-wizard",
    "title": "Deliver the Petition to the Wizard",
    "url": "https://demo.controlshiftlabs.com/events/deliver-the-petition-to-the-wizard",
    "description": "Join us as we travel to the Emerald City to deliver our petition to the Wizard.",
    "start_at": "2018-03-01T12:00:00Z",
    "end_at": "2018-03-01T13:30:00Z",
    "start_in_zone": "2018-03-01T12:00:00-05:00",
    "end_in_zone": "2018-03-01T13:30:00-05:00",
    "time_zone": "America/New_York",
    "virtual": false,
    "launched_at": "2018-02-03T12:34:56Z",
    "locale": "en-US",
    "host_address": null,
    "max_attendees_count": null,
    "external_id": "control-shift-deliver-the-petition-to-the-wizard",
    "location": {
      "query": "wizard room",
      "latitude": "42.3376368",
      "longitude": "-70.99304",
      "venue": "The Wizard's Throne Room",
      "street_number": "",
      "street": "",
      "region": "MA",
      "postal_code": "",
      "country": "US",
      "created_at": "2017-11-16T22:38:29Z"
    },
    "mentor": {
      "member_id": 456,
      "full_name": "Glinda the Good",
      "email": "glinda@example.com",
      "phone_number": "555-555-5555",
      "postcode": "12345"
    },
    "petition": {
      "slug": "repair-the-yellow-brick-road-1",
      "url": "https://demo.controlshiftlabs.com/petitions/repair-the-yellow-brick-road-1"
    },
    "labels": ["oz-organizer-help"]
  }
}
```

Find information about an event by URL slug.

`GET /api/v1/events/deliver-the-petition-to-the-wizard`

The `slug` used to identify a event for API purposes is the same as the `slug` that appears in the member-facing event page URL.
For example, for a event whose event page is at `https://demo.controlshiftlabs.com/events/chapter-meeting-1`,
the event `slug` is `chapter-meeting-1`.

<div></div>

### Create
> POST /api/v1/events

```json
{
  "event": {
    "title": "March Against Gun Violence",
    "description": "We're going to meet at the park and march to City Hall. Bring a sign!",
    "start_at": "2025-06-01T15:00-05:00",
    "end_at": "2025-06-01T17:30-05:00",
    "time_zone": "America/Chicago",
    "host": {
      "first_name": "Gabrielle",
      "last_name": "Giffords",
      "email": "gabrielle.giffords@example.com"
    },
    "location": {
      "venue": "City Park",
      "street_number": "123",
      "street": "Main Street",
      "locality": "Kansas City",
      "region": "KS",
      "postal_code": "12345",
      "country": "US"
    },
    "event_type": {
      "id": 12
    },
    "group": {
      "slug": "coalition-for-gun-reform"
    },
    "labels": [
      "gun-control topic",
      "congress"
    ]
  }
}
```

> Response body

```json
{
  "status": "success",
  "event": {
    "slug": "march-against-gun-violence-1",
    "title": "March Against Gun Violence",
    "url": "https://demo.controlshiftlabs.com/events/march-against-gun-violence-1",
    "description": "We're going to meet at the park and march to City Hall. Bring a sign!",
    "start_at": "2025-06-01T20:00Z",
    "end_at": "2025-06-01T22:30Z",
    "start_in_zone": "2025-06-01T15:00-05:00",
    "end_in_zone": "2025-06-01T17:30-05:00",
    "time_zone": "America/Chicago",
    "virtual": false,
    "launched_at": "2025-05-23T21:32Z",
    "locale": "en-US",
    "host_address": null,
    "max_attendees_count": null,
    "location": {
      "latitude": 39.168100,
      "longitude": -94.776063,
      "postal_code": "12345",
      "country": "US",
      "region": "KS",
      "locality": "Kansas City",
      "query": "City Park, 123 Main Street, Kansas City, KS 12345, US",
      "street": "Main Street",
      "street_number": "123",
      "venue": "City Park",
      "created_at": "2025-05-23T21:32Z",
      "extra_location_info": null
    },
    "event_type": {
      "name": "Protest"
    },
    "shifts": [],
    "local_chapter": {
      "name": "Coalition for Gun Reform",
      "slug": "coalition-for-gun-reform",
      "url": "https://demo.controlshiftlabs.com/groups/coalition-for-gun-reform"
    },
    "labels": [
      "gun-control topic",
      "congress"
    ],
    "campaigner_contactable": true,
    "event_host_name_override": null,
    "forum_enabled": true,
    "hidden_address": false,
    "hide_recent_attendees": false,
    "redirect_to": null,
    "sharing_disabled": false,
    "web_conference_url": null,
    "mentor": null,
    "reviewer": null
  }
}
```

Create a new event.

`POST /api/v1/events`

If the event is created successfully, the host will receive an email asking them to confirm that they are hosting.
Once the host confirms, the event will work the same way as an event created via the web UI.
The URL in the response is the public event page where members can RSVP.
To update an event after creation, use the returned `slug` with the Update endpoint described below.

The request body should be a JSON block containing one `"event"` object, which can have the following properties:

Field | Type | Description | Required?
------|------|-------------|----------
campaigner_contactable | Boolean | Whether members of the public can contact the event host via the public event page | no; default is `true`
description | String | Description of the event | yes
end_at | String | ISO 8601 date/time that the event ends | no; default is no specific end time
event_host_name_override | String | Name to display on the event page instead of the host’s account name | no
event_type[id] | Integer | Unique ID of an existing Event Type that should be set on the event | no
extra_location_info | String | Information about the event’s location | no
forum_enabled | Boolean | Whether the forum on the event page should be enabled | no; defaults to organisation setting
group[slug] | String | Unique identifier for an existing group this event should be associated with | no
hidden_address | Boolean | Whether the event’s full address should be obscured before RSVP | no; default is `false`
hide_recent_attendees | Boolean | Whether to suppress the display of attendee’s names in the "recently shared" display. | no; default is `false`
host | User block ([see above](#json-type-user)) | User who will host the event. If a user account does not already exist with this email, we will create one. | yes
labels | List of Strings | Labels that should be applied to the new event. Any labels that do not already exist will be created | no
locale | String | The ISO 639-1 two-letter code for the language the event content is in. Must be one of the languages supported by ControlShift. | no; defaults to organisation's default language
location | Location block ([see above](#json-type-location)) | Information about either the exact location of an in-person event, or the location a virtual event is relevant to. May be omitted entirely for a virtual event that doesn't have a specific audience location. If latitude and longitude are included, we’ll use them. Otherwise, we’ll geocode the fields provided. | only for in-person events
max_attendees_count | Integer | Maximum number of attendees allowed | no
partnership[slug] | String | Unique identifier for an existing partnership this event should be associated with | no
start_at | String | ISO 8601 date/time that the event starts | yes
time_zone | String | tz database code for the event’s time zone (e.g. "America/New_York") | yes
title | String | Title of the event | yes
virtual | Boolean | Whether this is a virtual event | no; defaults to the organisation default for new events
web_conference_url | String | URL for a Zoom or other virtual meeting associated with this event | no


<div></div>

### Update

> PUT request body

```json
{
  "event": {
    "description": "We're going to meet at the park and march to City Hall. Bring a sign!",
    "max_attendees_count": null
  }
}
```

Updates the content and/or settings of the event whose slug is in the URL.

`PUT /api/v1/events/march-against-gun-violence`

The request body should contain only the fields you would like to update, in JSON format. All other fields will be left unchanged.

The fields that can be changed this way are:

Field | Type | Description
------|------|------------
campaigner_contactable | Boolean | Whether members of the public can contact the event host via the public event page
description | String | Description of the event
event_host_name_override | String | Name to display for the event host on the event page. Set to `null` to use the name from the event host's user account.
extra_location_info | String | Additional non-address information about the event's location, e.g. "7th floor" or "Park in the back parking lot"
forum_enabled | Boolean | Enables or disables the discussion forum feature for the event's attendees
hidden_address | Boolean | Indicates that the event's address is private. The city/locality will be shown on the web, but the full address will only be provided to members who RSVP to the event.
hide_recent_attendees | Boolean | Do not display the names of people who recently RSVPed in the post-RSVP sharing prompt.
host_address | String | The mailing address of the event host. May be used to mail event materials.
max_attendees_count | Integer | Limit on how many people, besides the host, may sign up for this event. Set to `null` for no limit.
redirect_to | String | If set, visitors to the event page will be redirected to this URL
sharing_disabled | Boolean | Turns off the social sharing prompts for the event
title | String | Event title
web_conference_url | String | Video call or web conference tool URL for attendees to access the event

<div></div>

### Update image

The image shown on the event page can be updated by making a PUT request with the new image as the body of the request.

`PUT /api/v1/events/march-against-gun-violence/images/image`

To remove the image without replacing it, perform a DELETE request to the same URL.

`DELETE /api/v1/events/march-against-gun-violence/images/image`


<%= partial "includes/authenticated_api/labelings.md.erb",
            locals: {campaign_type: 'event', path_prefix: '/api/v1/events/deliver-the-petition-to-the-wizard'} %>

<%= partial "includes/authenticated_api/mentor.md.erb",
            locals: {campaign_type: 'event', path_prefix: '/api/v1/events/deliver-the-petition-to-the-wizard'} %>

<div></div>

<%= partial "includes/authenticated_api/reviewer.md.erb",
            locals: {campaign_type: 'event', path_prefix: '/api/v1/events/deliver-the-petition-to-the-wizard'} %>
