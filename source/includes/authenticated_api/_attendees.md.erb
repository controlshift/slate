## Attendees

Attendees are member RSVPs to an Event. All attendee actions are namespaced by URL underneath the events that the attendee was recorded against.

### Lookup

> GET response body for Lookup

```json
{
  "attendee": {
    "notification_level": "all_messages",
    "attending_status": "attending",
    "additional_fields": {},
    "id": 123,
    "country": "US",
    "created_at": "2020-02-01T10:00:00Z",
    "updated_at": "2020-02-01T10:00:00Z",
    "unsubscribe_at": null,
    "email": "foo@bar.com",
    "confirmed_at": null,
    "confirmed_reason": null,
    "first_name": "Foo",
    "join_partnership": true,
    "join_organisation": true,
    "last_name": "Bar",
    "phone_number": "123-456",
    "postcode": "10010",
    "source": "",
    "token": "abcDEFghi123456789jklMNO",
    "user_ip": "123.123.123.123",
    "utm_campaign": "",
    "utm_content": "",
    "utm_medium": "",
    "utm_source": "",
    "utm_term": "",
    "eu_data_processing_consent": false,
    "consent_content_version": null,
    "email_opt_in_type": {
      "context": "web_form",
      "kind": "radio_sure",
      "mailable": true,
      "external_id": null,
      "active": true
    },
    "member": {
      "id": 111222333,
      "created_at": "2020-02-01T10:00:00Z"
    },
    "event": {
      "url": "https://your-organisation.controlshiftlabs.com/events/deliver-the-petition-to-the-wizard",
      "slug": "deliver-the-petition-to-the-wizard"
    }
  }
}
```

Find an attendee by email address. Once you have obtained the attendee's id you can use this identifier in other API calls.

`GET /api/v1/events/deliver-the-petition-to-the-wizard/attendees/lookup?email=foo@bar.com`

<div></div>

### Create

Creates a new attendee for the specified event. This API endpoint can be used to record externally collected RSVPs for
a particular event within your instance of the ControlShift platform.

All of the same post-RSVP actions that the platform usually supports including webhooks, CRM syncs, and other integrations
will still be triggered, in the same way they are for normal RSVPs.

For organisations that require email confirmation, a confirmation email will be sent to the action taker.

<%= partial 'includes/create_action_fields.md.erb', locals: { action_name: 'attendee' } %>

`POST /api/v1/events/deliver-the-petition-to-the-wizard/attendees/`

<div></div>

#### POST body

`attendee[first_name]=Ada&attendee[last_name]=Lovelace&attendee[email]=ada@lovelace.com&attendee[postcode]=12345`

> POST response body for create

```json
{
  "attendee": {
    "notification_level": "none",
    "attending_status": "attending",
    "additional_fields": {},
    "id": 880,
    "country": "US",
    "created_at": "2020-08-24T14:08:53Z",
    "updated_at": "2020-09-17T20:36:36Z",
    "unsubscribe_at": null,
    "email": "ada@lovelace.com",
    "confirmed_at": null,
    "confirmed_reason": null,
    "first_name": "Ada",
    "join_organisation": true,
    "join_partnership": null,
    "last_name": "Lovelace",
    "new_mobile_subscriber": null,
    "phone_number": null,
    "postcode": "12345",
    "source": "",
    "token": "efxqQSMHj1UidVLppu3eT17H",
    "user_ip": null,
    "utm_campaign": null,
    "utm_content": null,
    "utm_medium": null,
    "utm_source": null,
    "utm_term": null,
    "join_group": null,
    "eu_data_processing_consent": true,
    "consent_content_version": {
      "id": 55,
      "external_id": null,
      "consent_type": "explicit"
    },
    "data_processing_consent_type": "explicit",
    "email_opt_in_type": {
      "context": "web_form",
      "kind": "radio_sure",
      "mailable": true,
      "external_id": null,
      "active": true
    },
    "member": {
      "id": 1124,
      "created_at": "2019-08-28T20:50:38Z"
    },
    "event": {
      "url": "https://your-organisation.controlshiftlabs.com/events/deliver-the-petition-to-the-wizard",
      "slug": "deliver-the-petition-to-the-wizard"
    }
  }
}
```

<div></div>

### Update email opt in type

Updates the email opt in type associated with a single attendee. This can be used to change the email opt in type
if a more legally compliant form of consent was gathered elsewhere. The email opt in type for the attendee is updated
to the opt in type specified by `external_id`.

No history is stored recording the original consent type, it is replaced by the new one specified in the API call.

`POST /api/v1/events/deliver-the-petition-to-the-wizard/attendees/123`

#### POST body

`external_id=foo`

<div></div>

### Destroy

> DELETE response body for Destroy

```json
{
  "attendee": {
    "deleted": true,
    "id": 123,
    "email": "foo@bar.com"
  }
}
```

Permanently deletes the attendee with the specified ID.

`DELETE /api/v1/events/deliver-the-petition-to-the-wizard/attendees/123`

<div></div>

### List

List the attendees that have RSVPed to an Event.

<%= partial "includes/shared/pagination.md" %>

Hash        | Description
----------- | -----------
meta        | pagination information
event       | basic information about the event
attendees   | an array of attendee results

`GET /api/v1/events/deliver-the-petition-to-the-wizard/attendees?page=2`

<div></div>

### Unsubscribe

> POST response body for Unsubscribe

```json
{
  "attendee": {
    "unsubscribed": true,
    "notice": "You have successfully unsubscribed from the event.",
    "id": 123,
    "email": "foo@bar.com"
  }
}
```

Unsubscribes a member who has RSVPed to the event from any emails sent by event host. They will still receive transactional emails.

`POST /api/v1/events/deliver-the-petition-to-the-wizard/attendees/123/unsubscribe`

<div></div>
