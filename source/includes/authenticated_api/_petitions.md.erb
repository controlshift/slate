## Petitions

Petition are pieces of content that can be signed by members.

### Show

> GET response Body

```json
{
  "petition": {
    "id": 123,
    "slug": "no-taxes-on-tea",
    "title": "No Taxes on Tea",
    "who": "King George",
    "what": "Stop taxing our tea",
    "why": "It is unjust.",
    "locale": "en",
    "admin_status": "good",
    "created_at": "2018-01-22T19:01:44Z",
    "updated_at": "2018-03-05T15:02:02Z",
    "launched": true,
    "signature_count_add_amount": 100
    "source": "effort_near",
    "admin_notes": [
      {
        "source": "legacy",
        "body": "An older note about this campaign",
        "created_at": "2018-01-25T23:45:12Z",
        "user": null
      },
      {
        "source": "user",
        "body": "We should have a call with this campaigner but they have no telephone.",
        "created_at": "2019-10-09T12:34:45Z",
        "user": {
          "email": "organiser_2@example.com",
          "full_name": "Sarah Organiser"
        }
      }
    ],
    "url": "https://demo.controlshiftlabs.com/petitions/no-taxes-on-tea",
    "public_who": "King George",
    "public_signature_count": 234,
    "goal": 500,
    "ended": true,
    "ended_type": "won",
    "ended_reason": "We overthrew the government and they don't tax our tea anymore.",
    "successful": true,
    "ended_story": "This was an overwhelming success!",
    "image": {
      "urls": {
        "open_graph": "http://cdn.example.com/petitions/images/25/open_graph/a-little-teapot.png?1516647704",
        "horizontal": "http://cdn.example.com/petitions/images/25/horizontal/a-little-teapot.png?1516647704",
        "hero": "http://cdn.example.com/petitions/images/25/hero/a-little-teapot.png?1516647704",
        "original": "http://cdn.example.com/petitions/images/25/original/a-little-teapot.png?1516647704",
        "form": "http://cdn.example.com/petitions/images/25/form/a-little-teapot.png?1516647704"
      },
      "description": "Picture of a small teapot with flowers on it and money tucked under the lid"
    },
    "creator": {
      "full_name": "Patrick Henry",
      "first_name": "Patrick",
      "last_name": "Henry",
      "email": "patrick.henry@example.com",
      "phone_number": "555-555-5555"
    },
    "mentor": {
      "member_id": 123,
      "full_name": "Alexander Hamilton",
      "email": "alex.hamilton@example.com",
      "phone_number": null,
      "postcode": "12345"
    },
    "location": {
      "query": "boston harbor",
      "latitude": "42.3376368",
      "longitude": "-70.99304",
      "venue": "Boston Harbor",
      "street_number": "",
      "street": "",
      "region": "MA",
      "postal_code": "",
      "country": "US",
      "created_at": "2017-11-16T22:38:29Z"
    },
    "decision_makers": [
      {
        "slug": "king-george",
        "name": "George",
        "context": "King of England",
        "phone_number": "",
        "email": "",
        "location": {
          "query": "buckingham palace",
          "latitude": "51.501364",
          "longitude": "-0.1440787",
          "venue": "Buckingham Palace",
          "street_number": "",
          "street": "",
          "region": "London",
          "postal_code": "SW1A 1AA",
          "country": "UK",
          "created_at": "2017-11-16T22:38:29Z"
        }
      }
    ],
    "effort": {
      "slug": "no-taxation-without-representation"
    },
    "partnership": {
      "slug": "the-american-revolution"
    },
    "categories": [
      {
        "slug": "avoidingtaxes",
        "name": "Avoiding Taxes"
      },
      {
        "slug": "boats",
        "name": "Boats"
      }
    ]
  }
}
```

Find information about a petition by URL slug.

`GET /api/v1/petitions/no-taxes-on-tea`

The `slug` used to identify a petition for API purposes is the same as the `slug` that appears in the member-facing petition page URL.
For example, for a petition whose petition page is at `https://demo.controlshiftlabs.com/petitions/save-our-library`,
the petition `slug` is `save-our-library`.

<div></div>

### List

> GET response body

```json
{
  "petitions": [
    {
      "id": 123,
      "slug": "no-taxes-on-tea",
      "title": "No Taxes on Tea",
      ...
    },
    {
      "id": 124,
      "slug": "stop-burning-coal-1",
      "title": "Stop Burning Coal",
      ...
    },
    ...
  ],

  "meta": {
    "current_page": 1,
    "total_pages": 12,
    "previous_page": null,
    "next_page": 2
  }
}
```

Get a paginated list of all petitions, including ones that are unlaunched or otherwise not visible to the public. Includes all the same data as the single-petition endpoint for each petition.

<%= partial "includes/shared/pagination.md" %>

`GET /api/v1/petitions?page=1`

<div></div>

### Create
> POST /api/v1/petitions

```json
{
  "petition": {
    "title": "No Taxes on Tea",
    "what": "Stop taxing our tea",
    "why": "No taxation without representation!",
    "categories": ["Tax Policy", "End Colonialism"],
    "creator": {
      "first_name": "Patrick",
      "last_name": "Henry",
      "email": "patrick.henry@example.com",
      "locale": "en-US"
    },
    "targets": [
      {
        "name": "George III",
        "context": "King of Great Britain"
      }
    ],
    "partnership": {
      "slug": "american-whigs"
    },
    "region": {
      "slug": "new-york-city"
    }
  }
}
```

> Response body

```json
{
  "status": "success",
  "petition": {
    "admin_events_status": "auto",
    "admin_status": "good",
    "alias": null,
    "campaigner_contactable": true,
    "can_download_signers": true,
    "created_at": "1776-12-16T21:32Z",
    "custom_goal": null,
    "delivery_details": null,
    "external_facebook_page": null,
    "external_site": null,
    "goal": 100,
    "hide_petition_creator": false,
    "hide_recent_signers": false,
    "hide_signature_form": false,
    "id": 123,
    "launched": true,
    "locale": "en",
    "petition_creator_name_override": null,
    "redirect_to": null,
    "show_progress_bar": true,
    "signature_count_add_amount": null,
    "slug": "no-taxes-on-tea",
    "source": "API",
    "title": "No Taxes on Tea",
    "updated_at": "1776-12-16T21:32Z",
    "what": "Stop taxing our tea",
    "who": null,
    "why": "No taxation without representation!",
    "title_locked": null,
    "what_locked": null,
    "who_locked": null,
    "why_locked": null,
    "delivery_details_locked": null,
    "external_facebook_page_locked": null,
    "external_site_locked": null,
    "categories_locked": null,
    "url": "https://demo.controlshiftlabs.com/petitions/no-taxes-on-tea",
    "public_who": "George III, King of Great Britain",
    "ended": false,
    "successful": false,
    "image": null,
    "public_signature_count": 0,
    "admin_notes": [],
    "creator": {
      "full_name": "Patrick Henry",
      "first_name": "Patrick",
      "last_name": "Henry",
      "email": "patrick.henry@example.com",
      "phone_number": null
    },
    "mentor": null,
    "reviewer": null,
    "location": null,
    "decision_makers": [
      {
        "name": "George III",
        "slug": "george-iii",
        "context": "King of Great Britain",
        "phone_number": null,
        "email": null
      }
    ],
    "effort": null,
    "partnership": {
      "slug": "american-whigs",
      "title": "Whigs in the American Colonies"
    },
    "labels": [],
    "categories": [
      {
        "slug": "tax-policy",
        "name": "Tax Policy"
      },
      {
        "slug": "end-colonialism-now",
        "title": "End Colonialism"
      }
    ]
  }
}
```

Create a new petition.

`POST /api/v1/petitions`

If a `creator` is specified, that user will become the petition's leader, and will receive an email asking them to confirm that they are leading the petition.
Once the leader confirms, the petition will work the same way as a petition created via the web UI.
The URL in the response is the public petition page where supporters can sign the petition.
To update a petition after creation, use the returned `slug` with the <a href="#authenticated-rest-api-petitions-update">Petition Update</a> endpoint.

The request body should be a JSON block containing one `"petition"` object, which can have the following properties:

Field | Type | Description | Required?
------|------|-------------|----------
campaigner_contactable | Boolean | Whether members of the public can contact the petition creator via the public petition page | no; default is `true`
categories | List of Strings | Names of categories that should be applied to the new petition. Must be categories that already exist. If category names are translated, the original/main language names should be used here. | no
creator | User block ([see below](#json-type-user)) | User who will be the petition leader. If a user account does not already exist with this email, we will create one. | no; default is no leader
delivery_details | String | How the petition will be delivered | no
external_facebook_page | String | URL of a facebook page for the campaign | no
external_site | String | URL of a website about the campaign | no
group[slug] | String | Unique identifier for an existing group this petition should be associated with | no
hide_petition_creator | Boolean | Whether to suppress the display of the petition creator’s name on the petition page | no; default is `false`
hide_recent_signers | Boolean | Whether to suppress the "recently signed" and "recently shared" display | no; default is `false`
labels | List of Strings | Labels that should be applied to the new petition. Any labels that do not already exist will be created | no
locale | String | The ISO 639-1 two-letter code for the language the petition content is in. Must be one of the languages supported by ControlShift. | no; defaults to organisation's default language
location | Location block ([see below](#json-type-location)) | Information about the location associated with the petition. If latitude and longitude are included, we’ll use them. Otherwise, we’ll geocode the fields provided. | no
partnership[slug] | String | Unique identifier for an existing partnership this petition should be associated with | no
petition_creator_name_override | String | Name to display on the petition page instead of the creator's account name | no
region[slug] | String | Unique identifier for an existing region this petition should be associated with | no
source | String | Optional, open-ended string representing where this petition came from | no; default is "API"
targets | List of 0-1 Target blocks ([see below](#json-type-target)) | Decision makers for this petition. If a block includes a `slug`, we’ll use it to look up an existing decision maker. Otherwise, we’ll try to create a new one. Any decision maker created this way will be set to "published". Specifying more than one decision maker is not yet supported. | no; default is no decision maker
title | String | Title of the petition | yes
what | String | Text of the petition ask | yes
who | String | Who the petition is addressed to | yes, unless `targets` includes a decision maker
why | String | Text explaining why the petition is important | yes


<%= partial "includes/authenticated_api/json_type_location" %>
<%= partial "includes/authenticated_api/json_type_target" %>
<%= partial "includes/authenticated_api/json_type_user" %>

<div></div>

<a name="authenticated-rest-api-petitions-update"></a>
### Update

> PUT request body

```json
{
  "petition": {
    "signature_count_add_amount": 100
  }
}
```

Updates the content and/or settings of the petition whose slug is in the URL.

`PUT /api/v1/petitions/no-taxes-on-tea`

The request body should contain only the fields you would like to update, in JSON format. All other fields will be left unchanged.

The fields that can be changed this way are:

Field | Type | Description
------|------|------------
admin_events_status | String | Whether the petition creator can create events associated with the petition. Must be one of "on" (events can be created), "off" (events cannot be created), or "auto" (use the default setting based on moderation status and number of signatures).
alias | String | Used for the petition's short URL. Setting `alias` to "foo" will result in a short URL of /p/foo
campaigner_contactable | Boolean | Whether members of the public can contact the petition creator via the public petition page
can_download_signers | Boolean | Whether the petition creator can download information about petition signers
categories_locked | Boolean | Petition creator cannot change which categories the petition is in
custom_goal | Integer | Signature goal displayed on the petition page. Set to `null` to automatically calculate the goal from the current signature total.
delivery_details | String | "How do you plan to deliver the petition?" text
delivery_details_locked | Boolean | Petition creator cannot change the delivery details
external_facebook_page | String | URL of a Facebook page associated with the petition
external_facebook_page_locked | Boolean | Petition creator cannot change the Facebook page URL
external_site | String | URL of a non-ControlShift page associated with the petition
external_site_locked | Boolean | Petition creator cannot change the external site URL
hide_petition_creator | Boolean | Do not display the petition creator's name or profile picture on the petition page
hide_recent_signers | Boolean | Do not display the list of recent signers on the petition page
hide_signature_form | Boolean | Turn off the form that allows people to sign the petition via the petition page
petition_creator_name_override | String | Name to display for the petition creator on the petition page. Set to `null` to use the name from the petition creator's user account.
redirect_to | String | If set, visitors to the petition page will be redirected to this URL
show_progress_bar | Boolean | Whether to show the signature progress bar on the petition page
signature_count_add_amount | Integer | If set, the displayed signature total on the petition page will be this much higher than the actual number of signatures recorded by the platform. This is usually used to reflect signatures that were gathered elsewhere and cannot be added to the platform, or signers whose data has been anonymized. A negative number can be specified to subtract from the total.
title | String | Petition title
title_locked | Boolean | Petition creator cannot change the title
what | String | Petition text
what_locked | Boolean | Petition creator cannot change the "what" field
who | String | Name of the person this petition is targeting. Petitions associated with a decision maker will not necessarily use this setting.
who_locked | Boolean | Petition creator cannot change the "who" field
why | String | "Why is this important?" text
why_locked | Boolean | Petition creator cannot change the "why" field

<div></div>

### Update images

The image shown on the petition page can be updated by making a PUT request with the new image as the body of the request.

`PUT /api/v1/petitions/no-taxes-on-tea/images/image`

To remove the image without replacing it, perform a DELETE request to the same URL.

`DELETE /api/v1/petitions/no-taxes-on-tea/images/image`

It's possible to specify a different image that will be used when the petition page is shared on social media via a request to

`PUT /api/v1/petitions/no-taxes-on-tea/images/social_share_image`

### Destroy

> DELETE response body

```json
{
  "status": "success",
  "message": "Petition has been scheduled for deletion.",
  "petition": {
    "slug": "no-taxes-on-tea"
  }
}
```

Permanently deletes the petition and all associated information including signature data via an HTTP DELETE request.

This is an asynchronous task, so while API calls will return with a success message immediately
it may take up to several minutes for the petition and all of its data to be completely
destroyed.

`DELETE /api/v1/petitions/no-taxes-on-tea`



<div></div>

<%= partial "includes/authenticated_api/labelings.md.erb",
            locals: {campaign_type: 'petition', path_prefix: '/api/v1/petitions/no-taxes-on-tea'} %>

<%= partial "includes/authenticated_api/mentor.md.erb",
            locals: {campaign_type: 'petition', path_prefix: '/api/v1/petitions/no-taxes-on-tea'} %>

<div></div>

<%= partial "includes/authenticated_api/reviewer.md.erb",
            locals: {campaign_type: 'petition', path_prefix: '/api/v1/petitions/no-taxes-on-tea'} %>
