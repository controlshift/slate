# Webhook Endpoints

Webhooks can be used by software engineers to integrate ControlShift with third-party systems. They allow engineers to build software that is triggered by events that take place within ControlShift. ControlShift would execute HTTP calls when certain event happen (e.g. a petition is launched; a category is changed).

To begin using these new webhooks, go to the admin homepage and click "Settings" under "Manage." Then choose the "CRM Integration & Webhooks" tab and click "Configure Webhook Endpoints." To begin sending data, you'll need to add a "New Webhook Endpoint." Each Webhook Endpoint URL receives a full firehose of all hooks that occur within ControlShift.

If you need additional information about webhooks or how to use them, please send us a support email [support@controlshiftlabs.com](mailto:support@controlshiftlabs.com). We'd also love stories about how customers are using webhooks.

### Retries

For webhook notifications successfully processed the response should have an HTTP 2XX status code. Responses returning a different status code will be marked as failed and automatically retried up to 9 times with an exponential backoff (e.g.: after 15s, 30s, 90s, etc.).

If after 9 retries the notification cannot be delivered, the webhook endpoint will be automatically disabled and will need to be re-enabled from the admin page to start receiving webhook notifications again.

### IP Addresses

Below you can find a list of the IP addresses that webhook deliveries will originate from, in case you want to whitelist them:

* 54.144.65.46
* 54.208.56.53

## Webhook types summary

You can configure ControlShift Labs Webhooks to return the following event types:

Type | Description
---------- | -------
<% data.webhooks.each do |webhook| %>
[<%= webhook.webhook %>](#<%= webhook.webhook.gsub('.','-') %>) | <%= webhook.description %>
<% end %>


<% data.webhooks.each do |webhook| %>
## <%= webhook.webhook %>
> Example payload for `<%= webhook.webhook %>`:

<% if webhook.payload %>
  ```json
  <%= JSON.pretty_generate(webhook.payload) %>
  ```
<% end %>

<%= webhook.description %>

<% if webhook.notes %>
  <%= webhook.notes %>
<% end %>

<% end %>
