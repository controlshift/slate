# Webhook Endpoints

Webhooks can be used by software engineers to integrate ControlShift with third-party systems. They allow engineers to build software that is triggered by events that take place within ControlShift. ControlShift executes HTTPS callbacks when certain event happen (e.g. a petition is launched; a category is changed).

To begin using webhooks, as an admin homepage and choose Settings > Integrations > Webhooks.  To begin sending data, you'll need to add a "New Webhook Endpoint." Each Webhook Endpoint URL you specify will receive a stream of all the hooks that occur within your ControlShift account.

If you need additional information about webhooks or how to use them, please send us a support email [support@controlshiftlabs.com](mailto:support@controlshiftlabs.com).

### Retries

For webhook notifications successfully processed the response should have an HTTP 2XX status code. Responses returning a different status code will be marked as failed and automatically retried up to 9 times with an exponential backoff (e.g.: after 15s, 30s, 90s, etc.).

If after 9 retries the notification cannot be delivered, the webhook endpoint will be automatically disabled and will need to be re-enabled from the admin page to start receiving webhook notifications again.

### Security

Securing access to your endpoints where webhooks are sent is delivered. We recommend taking a variety of steps.

* Using HTTPS with modern cypher suite.
* Restricting access by IP address
* Using basic HTTP authentication or an API token/secret in the URL.
* Verifying the signature hash of the message payload we send to authenticate ControlShift as the source of the webhook.

### Webhook HMAC Authenticity Signing

We send a special HTTP header along with webhook deliveries that allows customers to verify that the body of the
webhook being delivered originated from within your ControlShift account. We use HMAC and SHA 256 along with a
secret generated for each endpoint

You can retrieve the secret or generate a new one via Settings > Integrations > Webhooks within your ControlShift platform admin.

Header | Value
---------- | -------
`x-controlshift-webhook-signature` | sha256:abc123hjkl6789

The value is the prefix `sha256:` specifying the algorithm in use combined with the [HMAC digest](https://en.wikipedia.org/wiki/HMAC) of the webhook HTTP
request body signed with the signing secret specified for your endpoint in the ControlShift admin tools.

To verify the webhooks you receive are authentic, users should calculate the same digest value and compare it to the digest
passed in the `x-controlshift-webhook-signature` header. These values should always be the same.


### IP Addresses

Webhooks will be delivered from a stable set of the IP addresses tied to your region that will not change. It is a good idea to safe-list these addresses and block webhooks originating from unknown IP addresses.

* 54.144.65.46
* 54.208.56.53

### Direct AWS Access

The Bulk Data API notifies customers about new data files via webhook. In addition to allowing access via signed HTTPS
request, the Bulk Data API allows direct access to these files from within the same region where your ControlShift account
resides (usually US-East-1). Direct AWS Access allows for high-performance access to files on AWS S3 without leaving the AWS
Cloud for customers with a point of presence in the same AWS Region. Contact support if you would like to make use of this advanced feature.

## Webhook types summary

You can configure ControlShift Labs Webhooks to return the following event types:

Type | Description
---------- | -------
<% data.webhooks.each do |webhook| %>
[<%= webhook.webhook %>](#<%= webhook.webhook.gsub('.','-') %>) | <%= webhook.description %>
<% end %>


<% data.webhooks.each do |webhook| %>
## <%= webhook.webhook %>
> Example payload for `<%= webhook.webhook %>`:

<% if webhook.payload %>
  ```json
  <%= JSON.pretty_generate(webhook.payload) %>
  ```
<% end %>

<%= webhook.description %>

<% if webhook.notes %>
  <%= webhook.notes %>
<% end %>

<% end %>
