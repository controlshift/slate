# Bulk Data

ControlShift's Bulk Data Webhooks make it easy to pull your data into external services.

## Webhooks

We provides two special bulk data webhooks to help you keep an external reporting or analytics database server up to date with information from ControlShift's internal tables. The [data.full_table_exported](#data-full_table_exported) and [data.incremental_table_exported](#data-incremental_table_exported) webhooks can be consumed to keep an external database mirror containing ControlShift data up to date. This service was built in a database agnostic way, but it should be possible to build a ControlShift -> Amazon Redshift data pipeline using the [ControlShift to Redshift Pipeline](#controlshift-to-redshift-pipeline) technique outlines below.

<aside class="notice">
Bulk data webhooks should be automatically included when adding a new webhook endpoint. Please contact support to report any issues with bulk data webhook generation. For testing, you can manually trigger these wehbooks by visiting <code>https://&lt;your controlshift instance&gt;/org/settings/integrations/webhook_endpoints</code> and clicking on "Trigger" under "Test Nightly Bulk Data Export Webhook".
</aside>

## Bulk Data Data Schemas

The bulk data webhooks include exports of the following tables:

<% data.export_tables['tables'].each do |tbl_info| %>
* <%= tbl_info['table']['name'] %>
<% end %>

For full information on the schema of each table, use the `/api/bulk_data/schema.json` API endpoint.


## ControlShift to Redshift Pipeline

Setting up an Amazon Redshift integration us a great way to learn more about the actions your members are taking or perform
sophisticated analytics but is an advanced topic that requires knowledge of Amazon Web Services, SQL, and Terraform.

Following these instructions we'll use a custom [AWS Lambda](http://docs.aws.amazon.com/lambda/latest/dg/welcome.html)
to receive data from ControlShift's bulk data API webhooks and Amazon's [Lambda Redshift Loader](https://github.com/awslabs/aws-lambda-redshift-loader)
to load our data into Redshift. The final result will be a replica of the tables that back your instance of ControlShift that are refreshed in
full each night and appended with inserts on a per-minute basis.

ControlShift has authored a Terraform module that makes the entire setup process straightforward and allows for updates
to the infrastructure over time.

### Example Flow

![ControlShift Redshift Flow Chart](/images/ControlShift_Redshift_flow_transparent.svg)


### Redshift Pipeline Setup

If you are not yet using Redshift or Terraform, we've written [an example Terraform plan](https://github.com/controlshift/bulk-data-example)
that should create a working integration, a new Redshift instance and appropriate permissions from an otherwise empty AWS Account.

If you are already using Terraform or Redshift it is probably best to either fork this example or
 [use the module we provide directly in your own TF plan](https://registry.terraform.io/modules/controlshift/controlshift-redshift-sync/aws/)

Applying the Terraform plan in your AWS account will create all of the resources necessary and output the Webhook URL that you'll need to configure within
your ControlShift platform settings.

#### Prepare Redshift Schema

We need to prep tables in your Redshift Data Warehouse to receive our ControlShift Data.  We'll use `psql` for this.

1. Install `psql` if you don't have it already.
2. Download the current SQL DDL for ControlShift's tables <a href="/data/tables.sql" target="_blank">tables.sql</a>
or [generate an up to date one using this script.](https://github.com/controlshift/bulk-data-example/blob/master/create_tables.rb) that uses our Schema API.
3. Finally, you'll need to load that set of tables into your Redshift instance with the following command:

```psql -h <cluster_endpoint> -U <database_user> -d <database_name> -p <cluster_port> -f petitions_schema.sql```

### Configure ControlShift's Webhook

Finally, you'll need to log into your admin panel.  Settings > Integrations > Webhooks.  Then add the bulk data webhook pointing at your Lambda endpoint output by the Terraform plan.

### More information.

More information is available on the READMEs for the various projects that this integration is composed from. We can also provide assistance
for customers configuring these tools via support@controlshiftlabs.com
